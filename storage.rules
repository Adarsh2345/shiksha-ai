rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Classroom files: PDFs, etc.
    // Path: /classrooms/{classroomId}/files/{fileName}
    match /classrooms/{classroomId}/files/{fileName} {
    
      // READ: Allow any authenticated user who is a member of the classroom (teacher or student).
      function isClassroomMember(classroomId) {
        let classroomDoc = get(/databases/$(database)/documents/classrooms/$(classroomId));
        // The document must exist to proceed.
        if (!exists(/databases/$(database)/documents/classrooms/$(classroomId))) {
          return false;
        }
        let classroomData = classroomDoc.data;
        let isTeacher = 'teacherIds' in classroomData && request.auth.uid in classroomData.teacherIds;
        let isStudent = 'studentIds' in classroomData && request.auth.uid in classroomData.studentIds;
        return isTeacher || isStudent;
      }
    
      allow read: if request.auth != null && isClassroomMember(classroomId);

      // WRITE: Allow only teachers who are members of the classroom.
      function isClassroomTeacher(classroomId) {
        let classroomDoc = get(/databases/$(database)/documents/classrooms/$(classroomId));
        // The document must exist to proceed.
        if (!exists(/databases/$(database)/documents/classrooms/$(classroomId))) {
          return false;
        }
        let classroomData = classroomDoc.data;
        return 'teacherIds' in classroomData && request.auth.uid in classroomData.teacherIds;
      }
      
      allow write: if request.auth != null && isClassroomTeacher(classroomId);
    }
  }
}
