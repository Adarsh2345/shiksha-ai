
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for a developer admin.
    // NOTE: This uses 'exists' which is safer than a direct 'get' if the doc might not exist.
    function isDevAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/teachers/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/teachers/$(request.auth.uid)).data.dev_generated == true;
    }

    // DEV ADMIN: Allow broad read/write access ONLY for developer-generated accounts.
    // This rule is designed for seeding data and should not be used in production.
    match /{document=**} {
      allow read, write: if isDevAdmin();
    }

    // TEACHERS can read their own profile and any other teacher's profile.
    // They can only update their own profile.
    match /teachers/{teacherId} {
      allow get, list: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == teacherId;
      // create is handled by signup or admin panel
    }
    
    // STUDENTS can read their own profile. Teachers can read any student profile.
    match /students/{studentId} {
      function isOwner() {
        return request.auth != null && request.auth.uid == studentId;
      }
      function isTeacher() {
        return request.auth != null && 
               exists(/databases/$(database)/documents/teachers/$(request.auth.uid)) && 
               get(/databases/$(database)/documents/teachers/$(request.auth.uid)).data.role == 'teacher';
      }
      
      allow get: if isOwner() || isTeacher();
      allow list: if isTeacher();
      // create is handled by signup or admin panel
    }
    
    // CLASSROOMS
    match /classrooms/{classroomId} {
       // Any authenticated user can list classrooms (for teacher "Join" view)
      allow list: if request.auth != null;
      
      // Only members of a classroom can get its full details.
      allow get: if request.auth != null && 
                  (request.auth.uid in resource.data.teacherIds || request.auth.uid in resource.data.studentIds);
                  
      // Only teachers can update classroom details (e.g., joining/leaving)
      allow update: if request.auth != null && 
                     exists(/databases/$(database)/documents/teachers/$(request.auth.uid)) &&
                     get(/databases/$(database)/documents/teachers/$(request.auth.uid)).data.role == 'teacher';
      // create is handled by signup or admin panel

      // POSTS inside classrooms
      match /posts/{postId} {
        function isClassroomMember() {
          let classroomDoc = get(/databases/$(database)/documents/classrooms/$(classroomId));
          return request.auth != null &&
                 (request.auth.uid in classroomDoc.data.teacherIds || request.auth.uid in classroomDoc.data.studentIds);
        }

        function isValidPostRequest() {
          return request.auth != null && 
                 request.auth.uid == request.resource.data.authorId &&
                 exists(/databases/$(database)/documents/teachers/$(request.auth.uid)) &&
                 get(/databases/$(database)/documents/teachers/$(request.auth.uid)).data.role == 'teacher';
        }

        function isValidPostType() {
          let postData = request.resource.data;
          return (postData.type == 'message' && postData.content is string) ||
                 (postData.type == 'lessonPlan' && postData.lessonPlanId is string && postData.topic is string && postData.subject is string) ||
                 (postData.type == 'worksheet' && postData.worksheetId is string && postData.gradeLevel is string) ||
                 (postData.type == 'pdf' && postData.fileUrl is string && postData.fileName is string && postData.content is string);
        }

        allow read: if isClassroomMember();
        allow create: if isValidPostRequest() && isValidPostType();
        allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
      }
    }

    // LESSON PLANS & WORKSHEETS
    match /lessonPlans/{lessonPlanId} {
      allow read: if request.auth != null; // Any authenticated user can read if they have the ID
      allow create: if request.auth.uid == request.resource.data.authorId;
    }
    
    match /worksheets/{worksheetId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.authorId && request.resource.data.worksheetContent is string && request.resource.data.gradeLevel is string;
    }

    // LESSON HISTORY (subcollection of teacher)
    match /teachers/{teacherId}/lessonHistory/{historyId} {
      allow read, create: if request.auth != null && request.auth.uid == teacherId;
    }
  }
}
