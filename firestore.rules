
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a registered teacher.
    function isTeacher(userId) {
      return exists(/databases/$(database)/documents/teachers/$(userId));
    }

    // Helper function to check if a user is a member of a specific classroom.
    // This is safer as it checks for field existence before trying to access it.
    function isInClassroom(userId, classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      let isTeacherMember = 'teacherIds' in classroom && userId in classroom.teacherIds;
      let isStudentMember = 'studentIds' in classroom && userId in classroom.studentIds;
      return isTeacherMember || isStudentMember;
    }
    
    match /teachers/{teacherId} {
      // Any logged-in user can read teacher profiles. Needed for classroom member lists.
      allow read: if request.auth != null;
      // Teachers can only create or update their OWN profile.
      allow create, update: if request.auth != null && request.auth.uid == teacherId;
      
      // Allow unauthenticated admin panel to read, create, and delete test users.
      // WARNING: Remove for production.
      allow read, create, delete: if request.auth == null;

      // Teachers can read and create their own lesson history.
      match /lessonHistory/{docId} {
        allow read, create: if request.auth != null && request.auth.uid == teacherId;
      }
    }

    match /students/{studentId} {
       // Any logged-in user can read student profiles.
       allow read: if request.auth != null;
       // Students can only create or update their OWN profile.
       allow create, update: if request.auth != null && request.auth.uid == studentId;
       
       // Allow unauthenticated admin panel to read, create, and delete test users.
       // WARNING: Remove for production.
       allow read, create, delete: if request.auth == null;
    }
    
    match /classrooms/{classroomId} {
      // Any authenticated user can read classroom lists and individual classrooms.
      allow read: if request.auth != null;
      
      // Allow admin panel to create classrooms.
      allow create: if request.auth == null;
      
      // Allow teachers to join/leave (update teacherIds) and admin to add students (update studentIds).
      allow update: if (request.auth != null && isTeacher(request.auth.uid)) || request.auth == null;
    }

    match /classrooms/{classroomId}/posts/{postId} {
      // Only members of the classroom can read posts.
      allow read: if request.auth != null && isInClassroom(request.auth.uid, classroomId);

      // Only teachers who are members of the classroom can create posts.
      allow create: if request.auth != null && 
                     isTeacher(request.auth.uid) &&
                     ('teacherIds' in get(/databases/$(database)/documents/classrooms/$(classroomId)).data && 
                      request.auth.uid in get(/databases/$(database)/documents/classrooms/$(classroomId)).data.teacherIds);

      // Only the author of the post can delete it, and they must be a teacher.
      allow delete: if request.auth != null && isTeacher(request.auth.uid) && resource.data.authorId == request.auth.uid;
    }
    
    match /lessonPlans/{lessonPlanId} {
        // Any authenticated user can read lesson plans.
        allow read: if request.auth != null;
        // Only teachers can create (share) lesson plans.
        allow create: if request.auth != null && isTeacher(request.auth.uid);
    }
  }
}
